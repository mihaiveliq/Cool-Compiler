    .data
    .align  2
    .globl  class_nameTab
    .globl  Int_protObj
    .globl  String_protObj
    .globl  bool_const0
    .globl  bool_const1
    .globl  Main_protObj
    .globl  _int_tag
    .globl  _string_tag
    .globl  _bool_tag
_int_tag:
    .word   4
_string_tag:
    .word   5
_bool_tag:
    .word   6
str_const0:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const0
    .asciiz ""
    .align  2
str_const1:
    .word   5
    .word   6
    .word   String_dispTab
    .word   int_const6
    .asciiz "Object"
    .align  2
str_const2:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const1
    .asciiz "IO"
    .align  2
str_const3:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const3
    .asciiz "Int"
    .align  2
str_const4:
    .word   5
    .word   6
    .word   String_dispTab
    .word   int_const6
    .asciiz "String"
    .align  2
str_const5:
    .word   5
    .word   6
    .word   String_dispTab
    .word   int_const4
    .asciiz "Bool"
    .align  2
str_const6:
    .word   5
    .word   7
    .word   String_dispTab
    .word   int_const9
    .asciiz "32-big.cl"
    .align  2
str_const7:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz " "
    .align  2
str_const8:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "\n"
    .align  2
str_const9:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "!"
    .align  2
str_const10:
    .word   5
    .word   11
    .word   String_dispTab
    .word   int_const11
    .asciiz "Calculam factorial pentru: "
    .align  2
str_const11:
    .word   5
    .word   10
    .word   String_dispTab
    .word   int_const12
    .asciiz "Factorial recursiv: "
    .align  2
str_const12:
    .word   5
    .word   10
    .word   String_dispTab
    .word   int_const12
    .asciiz "Factorial iterativ: "
    .align  2
str_const13:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "0"
    .align  2
str_const14:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "1"
    .align  2
str_const15:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "2"
    .align  2
str_const16:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "3"
    .align  2
str_const17:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "4"
    .align  2
str_const18:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "5"
    .align  2
str_const19:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "6"
    .align  2
str_const20:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "7"
    .align  2
str_const21:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "8"
    .align  2
str_const22:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "9"
    .align  2
str_const23:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "-"
    .align  2
str_const24:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const2
    .asciiz "+"
    .align  2
str_const25:
    .word   5
    .word   6
    .word   String_dispTab
    .word   int_const4
    .asciiz "List"
    .align  2
str_const26:
    .word   5
    .word   6
    .word   String_dispTab
    .word   int_const4
    .asciiz "Main"
    .align  2
str_const27:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const3
    .asciiz "A2I"
    .align  2
int_const0:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   0
int_const1:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   2
int_const2:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   1
int_const3:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   3
int_const4:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   4
int_const5:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   5
int_const6:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   6
int_const7:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   7
int_const8:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   8
int_const9:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   9
int_const10:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   10
int_const11:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   27
int_const12:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   20
bool_const0:
    .word   6
    .word   4
    .word   Bool_dispTab
    .word   0
bool_const1:
    .word   6
    .word   4
    .word   Bool_dispTab
    .word   1
class_nameTab:
    .word   str_const1
    .word   str_const2
    .word   str_const25
    .word   str_const26
    .word   str_const3
    .word   str_const4
    .word   str_const5
    .word   str_const27
class_objTab:
    .word   Object_protObj
    .word   Object_init
    .word   IO_protObj
    .word   IO_init
    .word   List_protObj
    .word   List_init
    .word   Main_protObj
    .word   Main_init
    .word   Int_protObj
    .word   Int_init
    .word   String_protObj
    .word   String_init
    .word   Bool_protObj
    .word   Bool_init
    .word   A2I_protObj
    .word   A2I_init
Object_protObj:
    .word   0
    .word   3
    .word   Object_dispTab

IO_protObj:
    .word   1
    .word   3
    .word   IO_dispTab

List_protObj:
    .word   2
    .word   5
    .word   List_dispTab
    .word   0
    .word   0
Main_protObj:
    .word   3
    .word   3
    .word   Main_dispTab

Int_protObj:
    .word   4
    .word   4
    .word   Int_dispTab
    .word   0
String_protObj:
    .word   5
    .word   5
    .word   String_dispTab
    .word   int_const0
    .asciiz ""
    .align  2
Bool_protObj:
    .word   6
    .word   4
    .word   Bool_dispTab
    .word   0
A2I_protObj:
    .word   7
    .word   3
    .word   A2I_dispTab

Object_dispTab:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
IO_dispTab:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   IO.out_string
    .word   IO.out_int
    .word   IO.in_string
    .word   IO.in_int
List_dispTab:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   IO.out_string
    .word   IO.out_int
    .word   IO.in_string
    .word   IO.in_int
    .word   List.init
    .word   List.print
Main_dispTab:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   IO.out_string
    .word   IO.out_int
    .word   IO.in_string
    .word   IO.in_int
    .word   Main.main
    .word   Main.fact_rec
    .word   Main.fact_iter
Int_dispTab:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
String_dispTab:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   String.length
    .word   String.concat
    .word   String.substr
Bool_dispTab:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
A2I_dispTab:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   A2I.c2i
    .word   A2I.i2c
    .word   A2I.a2i
    .word   A2I.a2i_aux
    .word   A2I.i2a
    .word   A2I.i2a_aux
    .globl  heap_start
heap_start:
    .word   0
    .text
    .globl  Int_init
    .globl  String_init
    .globl  Bool_init
    .globl  Main_init
    .globl  Main.main
Object_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    move    $a0 $s0
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    jr      $ra
IO_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     Object_init
    move    $a0 $s0
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    jr      $ra
Int_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     Object_init
    move    $a0 $s0
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    jr      $ra
String_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     Object_init
    move    $a0 $s0
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    jr      $ra
Bool_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     Object_init
    move    $a0 $s0
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    jr      $ra
List_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     IO_init
    move    $a0 $s0
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    jr      $ra
Main_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     IO_init
    move    $a0 $s0
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    jr      $ra
A2I_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     Object_init
    move    $a0 $s0
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    jr      $ra
List.init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    lw      $a0 12($fp)
    sw      $a0 12($s0)
    lw      $a0 16($fp)
    sw      $a0 16($s0)
    move    $a0 $s0
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    addiu   $sp $sp 8    # params free
    jr      $ra
List.print:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    addiu   $sp $sp -4   # locals alloc
    move    $s0 $a0
    lw      $a0 12($s0)
    bnez    $a0 case0
    la      $a0 str_const6
    li      $t1 24
    jal     _case_abort2
case0:
    sw      $a0 -4($fp)
    lw      $t1 0($a0)      # class tag
    blt     $t1 5 casebranch2
    bgt     $t1 5 casebranch2
    lw      $a0 -4($fp)
    b       endcase1
casebranch2:
    blt     $t1 4 casebranch4
    bgt     $t1 4 casebranch4
    lw      $a0 -4($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 A2I_protObj
    jal     Object.copy
    jal     A2I_init
    bnez    $a0 dispatch3
    la      $a0 str_const6
    li      $t1 26
    jal     _dispatch_abort
dispatch3:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 28($t1)   # method offset
    jalr    $t1
    b       endcase1
casebranch4:
    blt     $t1 0 casebranch6
    bgt     $t1 7 casebranch6
    move    $a0 $s0
    bnez    $a0 dispatch5
    la      $a0 str_const6
    li      $t1 27
    jal     _dispatch_abort
dispatch5:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 0($t1)   # method offset
    jalr    $t1
    la      $a0 str_const0
    b       endcase1
casebranch6:
    lw      $a0 -4($fp)
    jal     _case_abort
endcase1:
    sw      $a0 -4($fp)
    la      $a0 str_const7
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 -4($fp)
    bnez    $a0 dispatch7
    la      $a0 str_const6
    li      $t1 31
    jal     _dispatch_abort
dispatch7:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 16($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch8
    la      $a0 str_const6
    li      $t1 31
    jal     _dispatch_abort
dispatch8:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 12($t1)   # method offset
    jalr    $t1
    lw      $a0 16($s0)
    move    $t1 $a0
    la      $a0 bool_const1
    beqz    $t1 isvoid9
    la      $a0 bool_const0
isvoid9:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else12
    la      $a0 str_const8
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch10
    la      $a0 str_const6
    li      $t1 32
    jal     _dispatch_abort
dispatch10:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 12($t1)   # method offset
    jalr    $t1
    b       endif13
else12:
    lw      $a0 16($s0)
    bnez    $a0 dispatch11
    la      $a0 str_const6
    li      $t1 32
    jal     _dispatch_abort
dispatch11:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 32($t1)   # method offset
    jalr    $t1
endif13:
    addiu   $sp $sp 4    # locals free
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    jr      $ra
Main.main:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    addiu   $sp $sp -20   # locals alloc
    move    $s0 $a0
    la      $a0 int_const0
    sw      $a0 -4($fp)
    la      $a0 str_const9
    sw      $a0 -8($fp)
    lw      $a0 -4($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const1
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    add     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
    sw      $a0 -12($fp)
    move    $a0 $zero
    sw      $a0 -16($fp)
    lw      $a0 -16($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 -12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 List_protObj
    jal     Object.copy
    jal     List_init
    bnez    $a0 dispatch14
    la      $a0 str_const6
    li      $t1 47
    jal     _dispatch_abort
dispatch14:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 28($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 -8($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 List_protObj
    jal     Object.copy
    jal     List_init
    bnez    $a0 dispatch15
    la      $a0 str_const6
    li      $t1 46
    jal     _dispatch_abort
dispatch15:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 28($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 -4($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 List_protObj
    jal     Object.copy
    jal     List_init
    bnez    $a0 dispatch16
    la      $a0 str_const6
    li      $t1 45
    jal     _dispatch_abort
dispatch16:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 28($t1)   # method offset
    jalr    $t1
    sw      $a0 -20($fp)
    lw      $a0 -20($fp)
    bnez    $a0 dispatch17
    la      $a0 str_const6
    li      $t1 49
    jal     _dispatch_abort
dispatch17:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 32($t1)   # method offset
    jalr    $t1

    la      $a0 str_const10
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch18
    la      $a0 str_const6
    li      $t1 52
    jal     _dispatch_abort
dispatch18:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 12($t1)   # method offset
    jalr    $t1
    bnez    $a0 dispatch19
    la      $a0 str_const6
    li      $t1 52
    jal     _dispatch_abort
dispatch19:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 24($t1)   # method offset
    jalr    $t1
    sw      $a0 -4($fp)
    la      $a0 str_const8
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 -4($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch20
    la      $a0 str_const6
    li      $t1 55
    jal     _dispatch_abort
dispatch20:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 32($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const11
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch21
    la      $a0 str_const6
    li      $t1 55
    jal     _dispatch_abort
dispatch21:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 12($t1)   # method offset
    jalr    $t1
    bnez    $a0 dispatch22
    la      $a0 str_const6
    li      $t1 55
    jal     _dispatch_abort
dispatch22:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 16($t1)   # method offset
    jalr    $t1
    bnez    $a0 dispatch23
    la      $a0 str_const6
    li      $t1 55
    jal     _dispatch_abort
dispatch23:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 12($t1)   # method offset
    jalr    $t1
    la      $a0 str_const8
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 -4($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch24
    la      $a0 str_const6
    li      $t1 57
    jal     _dispatch_abort
dispatch24:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 36($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const12
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch25
    la      $a0 str_const6
    li      $t1 57
    jal     _dispatch_abort
dispatch25:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 12($t1)   # method offset
    jalr    $t1
    bnez    $a0 dispatch26
    la      $a0 str_const6
    li      $t1 57
    jal     _dispatch_abort
dispatch26:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 16($t1)   # method offset
    jalr    $t1
    bnez    $a0 dispatch27
    la      $a0 str_const6
    li      $t1 57
    jal     _dispatch_abort
dispatch27:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 12($t1)   # method offset
    jalr    $t1
    addiu   $sp $sp 20    # locals free
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    jr      $ra
Main.fact_rec:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const0
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq28
    la      $a1 bool_const0
    jal     equality_test
eq28:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else30
    la      $a0 int_const2
    b       endif31
else30:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const2
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    sub     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch29
    la      $a0 str_const6
    li      $t1 65
    jal     _dispatch_abort
dispatch29:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 32($t1)   # method offset
    jalr    $t1
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    mul     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
endif31:
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    addiu   $sp $sp 4    # params free
    jr      $ra
Main.fact_iter:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    addiu   $sp $sp -4   # locals alloc
    move    $s0 $a0
    la      $a0 int_const2
    sw      $a0 -4($fp)
while34:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const0
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq32
    la      $a1 bool_const0
    jal     equality_test
eq32:
    lw      $t1 12($a0)     # bool slot
    la      $a0 bool_const1
    beqz    $t1 not33
    la      $a0 bool_const0
not33:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 endwhile35
    lw      $a0 -4($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 12($fp)
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    mul     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
    sw      $a0 -4($fp)
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const2
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    sub     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
    sw      $a0 12($fp)
    b       while34
endwhile35:
    move    $a0 $zero
    lw      $a0 -4($fp)
    addiu   $sp $sp 4    # locals free
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    addiu   $sp $sp 4    # params free
    jr      $ra
A2I.c2i:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const13
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq36
    la      $a1 bool_const0
    jal     equality_test
eq36:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else65
    la      $a0 int_const0
    b       endif66
else65:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const14
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq37
    la      $a1 bool_const0
    jal     equality_test
eq37:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else63
    la      $a0 int_const2
    b       endif64
else63:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const15
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq38
    la      $a1 bool_const0
    jal     equality_test
eq38:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else61
    la      $a0 int_const1
    b       endif62
else61:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const16
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq39
    la      $a1 bool_const0
    jal     equality_test
eq39:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else59
    la      $a0 int_const3
    b       endif60
else59:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const17
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq40
    la      $a1 bool_const0
    jal     equality_test
eq40:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else57
    la      $a0 int_const4
    b       endif58
else57:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const18
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq41
    la      $a1 bool_const0
    jal     equality_test
eq41:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else55
    la      $a0 int_const5
    b       endif56
else55:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const19
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq42
    la      $a1 bool_const0
    jal     equality_test
eq42:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else53
    la      $a0 int_const6
    b       endif54
else53:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const20
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq43
    la      $a1 bool_const0
    jal     equality_test
eq43:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else51
    la      $a0 int_const7
    b       endif52
else51:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const21
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq44
    la      $a1 bool_const0
    jal     equality_test
eq44:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else49
    la      $a0 int_const8
    b       endif50
else49:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const22
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq45
    la      $a1 bool_const0
    jal     equality_test
eq45:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else47
    la      $a0 int_const9
    b       endif48
else47:
    move    $a0 $s0
    bnez    $a0 dispatch46
    la      $a0 str_const6
    li      $t1 111
    jal     _dispatch_abort
dispatch46:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 0($t1)   # method offset
    jalr    $t1
    la      $a0 int_const0
endif48:
endif50:
endif52:
endif54:
endif56:
endif58:
endif60:
endif62:
endif64:
endif66:
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    addiu   $sp $sp 4    # params free
    jr      $ra
A2I.i2c:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const0
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq67
    la      $a1 bool_const0
    jal     equality_test
eq67:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else96
    la      $a0 str_const13
    b       endif97
else96:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const2
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq68
    la      $a1 bool_const0
    jal     equality_test
eq68:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else94
    la      $a0 str_const14
    b       endif95
else94:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const1
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq69
    la      $a1 bool_const0
    jal     equality_test
eq69:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else92
    la      $a0 str_const15
    b       endif93
else92:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const3
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq70
    la      $a1 bool_const0
    jal     equality_test
eq70:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else90
    la      $a0 str_const16
    b       endif91
else90:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const4
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq71
    la      $a1 bool_const0
    jal     equality_test
eq71:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else88
    la      $a0 str_const17
    b       endif89
else88:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const5
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq72
    la      $a1 bool_const0
    jal     equality_test
eq72:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else86
    la      $a0 str_const18
    b       endif87
else86:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const6
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq73
    la      $a1 bool_const0
    jal     equality_test
eq73:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else84
    la      $a0 str_const19
    b       endif85
else84:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const7
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq74
    la      $a1 bool_const0
    jal     equality_test
eq74:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else82
    la      $a0 str_const20
    b       endif83
else82:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const8
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq75
    la      $a1 bool_const0
    jal     equality_test
eq75:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else80
    la      $a0 str_const21
    b       endif81
else80:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const9
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq76
    la      $a1 bool_const0
    jal     equality_test
eq76:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else78
    la      $a0 str_const22
    b       endif79
else78:
    move    $a0 $s0
    bnez    $a0 dispatch77
    la      $a0 str_const6
    li      $t1 129
    jal     _dispatch_abort
dispatch77:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 0($t1)   # method offset
    jalr    $t1
    la      $a0 str_const0
endif79:
endif81:
endif83:
endif85:
endif87:
endif89:
endif91:
endif93:
endif95:
endif97:
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    addiu   $sp $sp 4    # params free
    jr      $ra
A2I.a2i:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    lw      $a0 12($fp)
    bnez    $a0 dispatch98
    la      $a0 str_const6
    li      $t1 142
    jal     _dispatch_abort
dispatch98:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 12($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const0
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq99
    la      $a1 bool_const0
    jal     equality_test
eq99:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else115
    la      $a0 int_const0
    b       endif116
else115:
    la      $a0 int_const2
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const0
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 12($fp)
    bnez    $a0 dispatch100
    la      $a0 str_const6
    li      $t1 143
    jal     _dispatch_abort
dispatch100:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 20($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const23
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq101
    la      $a1 bool_const0
    jal     equality_test
eq101:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else113
    lw      $a0 12($fp)
    bnez    $a0 dispatch102
    la      $a0 str_const6
    li      $t1 143
    jal     _dispatch_abort
dispatch102:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 12($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const2
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    sub     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const2
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 12($fp)
    bnez    $a0 dispatch103
    la      $a0 str_const6
    li      $t1 143
    jal     _dispatch_abort
dispatch103:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 20($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch104
    la      $a0 str_const6
    li      $t1 143
    jal     _dispatch_abort
dispatch104:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 24($t1)   # method offset
    jalr    $t1
    jal     Object.copy
    lw      $t1 12($a0)     # int slot
    neg     $t1 $t1
    sw      $t1 12($a0)     # int slot
    b       endif114
else113:
    la      $a0 int_const2
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const0
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 12($fp)
    bnez    $a0 dispatch105
    la      $a0 str_const6
    li      $t1 144
    jal     _dispatch_abort
dispatch105:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 20($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const24
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq106
    la      $a1 bool_const0
    jal     equality_test
eq106:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else111
    lw      $a0 12($fp)
    bnez    $a0 dispatch107
    la      $a0 str_const6
    li      $t1 144
    jal     _dispatch_abort
dispatch107:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 12($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const2
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    sub     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const2
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 12($fp)
    bnez    $a0 dispatch108
    la      $a0 str_const6
    li      $t1 144
    jal     _dispatch_abort
dispatch108:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 20($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch109
    la      $a0 str_const6
    li      $t1 144
    jal     _dispatch_abort
dispatch109:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 24($t1)   # method offset
    jalr    $t1
    b       endif112
else111:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch110
    la      $a0 str_const6
    li      $t1 145
    jal     _dispatch_abort
dispatch110:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 24($t1)   # method offset
    jalr    $t1
endif112:
endif114:
endif116:
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    addiu   $sp $sp 4    # params free
    jr      $ra
A2I.a2i_aux:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    addiu   $sp $sp -12   # locals alloc
    move    $s0 $a0
    la      $a0 int_const0
    sw      $a0 -4($fp)
    lw      $a0 12($fp)
    bnez    $a0 dispatch117
    la      $a0 str_const6
    li      $t1 156
    jal     _dispatch_abort
dispatch117:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 12($t1)   # method offset
    jalr    $t1
    sw      $a0 -8($fp)
    la      $a0 int_const0
    sw      $a0 -12($fp)
while121:
    lw      $a0 -12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 -8($fp)
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    la      $a0 bool_const1
    blt     $t1 $t2 compare118
    la      $a0 bool_const0
compare118:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 endwhile122
    lw      $a0 -4($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const10
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    mul     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const2
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 -12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 12($fp)
    bnez    $a0 dispatch119
    la      $a0 str_const6
    li      $t1 160
    jal     _dispatch_abort
dispatch119:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 20($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch120
    la      $a0 str_const6
    li      $t1 160
    jal     _dispatch_abort
dispatch120:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 12($t1)   # method offset
    jalr    $t1
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    add     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
    sw      $a0 -4($fp)
    lw      $a0 -12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const2
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    add     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
    sw      $a0 -12($fp)
    b       while121
endwhile122:
    move    $a0 $zero
    lw      $a0 -4($fp)
    addiu   $sp $sp 12    # locals free
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    addiu   $sp $sp 4    # params free
    jr      $ra
A2I.i2a:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const0
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq123
    la      $a1 bool_const0
    jal     equality_test
eq123:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else130
    la      $a0 str_const13
    b       endif131
else130:
    la      $a0 int_const0
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 12($fp)
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    la      $a0 bool_const1
    blt     $t1 $t2 compare124
    la      $a0 bool_const0
compare124:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else128
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch125
    la      $a0 str_const6
    li      $t1 177
    jal     _dispatch_abort
dispatch125:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 32($t1)   # method offset
    jalr    $t1
    b       endif129
else128:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const2
    jal     Object.copy
    lw      $t1 12($a0)     # int slot
    neg     $t1 $t1
    sw      $t1 12($a0)     # int slot
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    mul     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch126
    la      $a0 str_const6
    li      $t1 178
    jal     _dispatch_abort
dispatch126:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 32($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 str_const23
    bnez    $a0 dispatch127
    la      $a0 str_const6
    li      $t1 178
    jal     _dispatch_abort
dispatch127:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 16($t1)   # method offset
    jalr    $t1
endif129:
endif131:
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    addiu   $sp $sp 4    # params free
    jr      $ra
A2I.i2a_aux:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    addiu   $sp $sp -4   # locals alloc
    move    $s0 $a0
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const0
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    move    $t2 $a0
    la      $a0 bool_const1
    beq     $t1 $t2 eq132
    la      $a1 bool_const0
    jal     equality_test
eq132:
    lw      $t1 12($a0)     # bool slot
    beqz    $t1 else136
    la      $a0 str_const0
    b       endif137
else136:
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const10
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    div     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
    sw      $a0 -4($fp)
    lw      $a0 12($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 -4($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    la      $a0 int_const10
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    mul     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
    jal     Object.copy
    lw      $t1 4($sp)
    addiu   $sp $sp 4
    lw      $t1 12($t1)     # int slot
    lw      $t2 12($a0)     # int slot
    sub     $t1 $t1 $t2
    sw      $t1 12($a0)     # int slot
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch133
    la      $a0 str_const6
    li      $t1 188
    jal     _dispatch_abort
dispatch133:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 16($t1)   # method offset
    jalr    $t1
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    lw      $a0 -4($fp)
    sw      $a0 0($sp)
    addiu   $sp $sp -4
    move    $a0 $s0
    bnez    $a0 dispatch134
    la      $a0 str_const6
    li      $t1 188
    jal     _dispatch_abort
dispatch134:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 32($t1)   # method offset
    jalr    $t1
    bnez    $a0 dispatch135
    la      $a0 str_const6
    li      $t1 188
    jal     _dispatch_abort
dispatch135:
    lw      $t1 8($a0)   # dispatch table
    lw      $t1 16($t1)   # method offset
    jalr    $t1
endif137:
    addiu   $sp $sp 4    # locals free
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
    addiu   $sp $sp 4    # params free
    jr      $ra
